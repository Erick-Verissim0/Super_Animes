{
  "name": "name_project_api",
  "version": "1.0.0",
  "description": "Description this API",
  "author": "Equipe Teamsoft",
  "contributors": [
    "Walleks Miranda <walleks.rodrigues@teamsoft.com.br>",
    "Name <example@domain>"
  ],
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "build:full": "git pull && yarn && yarn build && pm2 restart planning_api",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "up": "docker-compose up -d",
    "down": "docker-compose down",
    "local": "NODE_ENV=local nest start --watch",
    "local:win": "SET NODE_ENV=local&& nest start --watch",
    "dev": "NODE_ENV=development nest start --watch",
    "homolog": "NODE_ENV=homologation nest start --watch",
    "prod": "NODE_ENV=production node dist/main/main",
    "debug:local": "NODE_ENV=local nest start --debug --watch",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --passWithNoTests --runInBand --no-cache",
    "test:coverage": "npm run test -- --coverage",
    "test:unit": "npm run test -- --watchAll -c jest-unit-config.ts",
    "test:staged": "npm test -- -c jest-unit-config.ts",
    "typeorm:local": "NODE_ENV=local ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:local:win": "SET NODE_ENV=local&& ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:dev": "NODE_ENV=development ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:hom": "NODE_ENV=homologation ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:hom:dev": "SET NODE_ENV=homologation&& ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:prod": "NODE_ENV=production ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "typeorm:prod:dev": "SET NODE_ENV=production ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/main/config/typeorm/typeorm.config.ts",
    "migration:create": "cd ./database/migrations && echo 'DIGITE O NOME DA MIGRATION [SEM ESPAÃ‡O]' && read name && NODE_ENV=local ../../node_modules/.bin/typeorm migration:create $name && npm run migration:import",
    "migration:import": "node ./database/scripts/migration-import.js",
    "migration:create:win": "cd ./database/migrations && SET NODE_ENV=local&& ../../node_modules/.bin/typeorm migration:create",
    "migration:run:local": "NODE_ENV=local npm run schema:create && npm run typeorm:local migration:run",
    "migration:revert:local": "npm run typeorm:local migration:revert",
    "migration:create:dev": "npm run typeorm:dev migration:create -- -n",
    "migration:run:dev": "NODE_ENV=development npm run schema:create && npm run typeorm:dev migration:run",
    "migration:revert:dev": "npm run typeorm:dev migration:revert",
    "migration:create:hom": "npm run typeorm:hom migration:create -- -n",
    "migration:run:hom": "npm run typeorm:hom migration:run",
    "migration:revert:hom": "npm run typeorm:hom migration:revert",
    "migration:run:prod": "NODE_ENV=production && npm run typeorm:prod migration:run",
    "migration:revert:prod": "npm run typeorm:prod migration:revert",
    "schema:drop:local": "npm run typeorm:local schema:drop",
    "schema:drop:dev": "npm run typeorm:dev schema:drop",
    "schema:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d database/create-schema query 'create schema if not exists SCHEMA_NAME;'",
    "prepare": "husky install",
    "pm2:dev": "pm2 start ecosystem.config.js --env development"
  },
  "dependencies": {
    "@nestjs/bull": "^10.0.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.1.0",
    "@nestjs/microservices": "^10.0.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.1.4",
    "@nestjs/terminus": "^10.0.1",
    "@nestjs/typeorm": "10.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "kafkajs": "^2.2.3",
    "nestjs-typeorm-paginate": "^4.0.4",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.11.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "5.0.0",
    "typeorm": "^0.3.17"
  },
  "devDependencies": {
    "@faker-js/faker": "^7.6.0",
    "@nestjs/cli": "^9.2.0",
    "@nestjs/schematics": "^10.0.1",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "29.5.3",
    "@types/multer": "^1.4.7",
    "@types/node": "^20.4.5",
    "@types/passport-jwt": "^3.0.9",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.2.1",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^8.9.0",
    "eslint-plugin-prettier": "^5.0.0",
    "git-commit-msg-linter": "^5.0.4",
    "husky": "^8.0.1",
    "jest": "^27.2.5",
    "jest-mock-extended": "^3.0.1",
    "lint-staged": "^13.0.3",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "9.4.4",
    "ts-node": "^10.9.0",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "typeorm-codebase-sync": "^1.1.2",
    "typescript": "<4.8"
  },
  "engines": {
    "node": ">=14"
  }
}
